%% A* Algorithm: Find optimal path
% ICS-E4000, Assignment 1
% Student: Gavriela Vranou
% Student number: 467614
% Starting position: Southwest

function s=findOptimalPath(s,hush)
% The optimal path is generated by starting at the last node and then
% identifying its parent node until it reaches the start node.

ii=size(s.closedList,1);
s.optimalPath=[];
optimal.x=s.closedList(ii,1);
optimal.y=s.closedList(ii,2);

ii=1;
s.optimalPath(ii,1)=optimal.x;
s.optimalPath(ii,2)=optimal.y;
ii=ii+1;

if ( (optimal.x == s.target.x) && (optimal.y == s.target.y))
    % If the algorithm managed to reach the Target node, traverse openList
    % and determine the parent nodes to build the optimal path
    idx=nodeIndex(s,optimal);
    parent.x=s.openList(idx,3);
    parent.y=s.openList(idx,4);
    flag=1;
    
    while(flag)
        s.optimalPath(ii,1) = parent.x;
        s.optimalPath(ii,2) = parent.y;
        
        if( parent.x == s.start.x && parent.y == s.start.y)
            flag=0;
            s.optimalPath(ii,1) = parent.x;
            s.optimalPath(ii,2) = parent.y;
        else
            % update the parents
            idx=nodeIndex(s,parent);
            parent.x=s.openList(idx,3);
            parent.y=s.openList(idx,4);
            ii=ii+1;
        end %End IF : reached Starting point
    end; % End WHILE
    if(hush)
        %% Show the path
        jj=size(s.optimalPath,1);
        disp('Optimal path to the target:');
        str='';
        for ii=jj:-1:1
            str=strcat(str,sprintf('(%d,%d) ',s.optimalPath(ii,1),s.optimalPath(ii,2)));
        end
        disp(str)
        fprintf('Total number of expanded nodes: %d, of which %d remain in the open list.\n',...
            s.totalExpandedNodes,size(find(s.openList(:,8)>0),1));
    end % End hush
else
    disp('No path exists from Starting point to the given Target');
end % End IF : last node is the target node